//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FrontDesk.Server.IntegrationTests.KioskEndpoint {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.frontdeskhealth.com", ConfigurationName="KioskEndpoint.IKioskEndpoint")]
    public interface IKioskEndpoint {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResult", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResultResponse")]
        System.Nullable<bool> SaveScreeningResult(FrontDesk.ScreeningResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResult", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResultResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> SaveScreeningResultAsync(FrontDesk.ScreeningResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResult_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResult_v2Response")]
        System.Nullable<bool> SaveScreeningResult_v2(FrontDesk.ScreeningResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResult_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/SaveScreeningResult_v2Response")]
        System.Threading.Tasks.Task<System.Nullable<bool>> SaveScreeningResult_v2Async(FrontDesk.ScreeningResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/SaveDemographicsResults", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/SaveDemographicsResultsResponse")]
        bool SaveDemographicsResults(FrontDesk.Common.Bhservice.Import.PatientDemographicsKioskResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/SaveDemographicsResults", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/SaveDemographicsResultsResponse")]
        System.Threading.Tasks.Task<bool> SaveDemographicsResultsAsync(FrontDesk.Common.Bhservice.Import.PatientDemographicsKioskResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/Ping", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/PingResponse")]
        bool Ping(short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/Ping", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/PingResponse")]
        System.Threading.Tasks.Task<bool> PingAsync(short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v2Response")]
        bool Ping_v2(FrontDesk.Server.Services.KioskPingMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v2Response")]
        System.Threading.Tasks.Task<bool> Ping_v2Async(FrontDesk.Server.Services.KioskPingMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v3", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v3Response")]
        bool Ping_v3(ScreenDox.Server.Common.Models.KioskPingMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v3", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/Ping_v3Response")]
        System.Threading.Tasks.Task<bool> Ping_v3Async(ScreenDox.Server.Common.Models.KioskPingMessage message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettings", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettingsResponse")]
        FrontDesk.Server.ScreeningSectionAgeView[] GetModifiedAgeSettings(System.DateTime lastModifiedDateUTC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettings", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettingsResponse")]
        System.Threading.Tasks.Task<FrontDesk.Server.ScreeningSectionAgeView[]> GetModifiedAgeSettingsAsync(System.DateTime lastModifiedDateUTC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettings_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettings_v2Response")]
        FrontDesk.Server.ScreeningSectionAgeView[] GetModifiedAgeSettings_v2(short kioskId, System.DateTime lastModifiedDateUTC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettings_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedAgeSettings_v2Response")]
        System.Threading.Tasks.Task<FrontDesk.Server.ScreeningSectionAgeView[]> GetModifiedAgeSettings_v2Async(short kioskId, System.DateTime lastModifiedDateUTC);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/TestKioskInstallation", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/TestKioskInstallationResponse")]
        bool TestKioskInstallation(string kioskKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/TestKioskInstallation", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/TestKioskInstallationResponse")]
        System.Threading.Tasks.Task<bool> TestKioskInstallationAsync(string kioskKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "ics", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "icsResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FrontDesk.Common.Bhservice.Import.PatientDemographicsKioskResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FrontDesk.ScreeningPatientIdentityWithAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FrontDesk.ScreeningResult))]
        System.Collections.Generic.Dictionary<string, int> GetPatientScreeningFrequencyStatistics(FrontDesk.ScreeningPatientIdentity patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "ics", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "icsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetPatientScreeningFrequencyStatisticsAsync(FrontDesk.ScreeningPatientIdentity patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "ics_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "ics_v2Response")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FrontDesk.Common.Bhservice.Import.PatientDemographicsKioskResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FrontDesk.ScreeningPatientIdentityWithAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FrontDesk.ScreeningResult))]
        System.Collections.Generic.Dictionary<string, int> GetPatientScreeningFrequencyStatistics_v2(FrontDesk.ScreeningPatientIdentity patient, short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "ics_v2", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetPatientScreeningFrequencyStatist" +
            "ics_v2Response")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetPatientScreeningFrequencyStatistics_v2Async(FrontDesk.ScreeningPatientIdentity patient, short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedLookupValues", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedLookupValuesResponse")]
        System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]> GetModifiedLookupValues(System.DateTime lastModifiedDateUTC, short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedLookupValues", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetModifiedLookupValuesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]>> GetModifiedLookupValuesAsync(System.DateTime lastModifiedDateUTC, short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetLookupValuesDeleteLog", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetLookupValuesDeleteLogResponse")]
        System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]> GetLookupValuesDeleteLog(System.DateTime lastModifiedDateUTC, short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/GetLookupValuesDeleteLog", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/GetLookupValuesDeleteLogResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]>> GetLookupValuesDeleteLogAsync(System.DateTime lastModifiedDateUTC, short kioskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/ValidatePatient", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/ValidatePatientResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        RPMS.Common.Models.PatientSearch ValidatePatient(RPMS.Common.Models.PatientSearch patient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.frontdeskhealth.com/IKioskEndpoint/ValidatePatient", ReplyAction="http://www.frontdeskhealth.com/IKioskEndpoint/ValidatePatientResponse")]
        System.Threading.Tasks.Task<RPMS.Common.Models.PatientSearch> ValidatePatientAsync(RPMS.Common.Models.PatientSearch patient);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKioskEndpointChannel : FrontDesk.Server.IntegrationTests.KioskEndpoint.IKioskEndpoint, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KioskEndpointClient : System.ServiceModel.ClientBase<FrontDesk.Server.IntegrationTests.KioskEndpoint.IKioskEndpoint>, FrontDesk.Server.IntegrationTests.KioskEndpoint.IKioskEndpoint {
        
        public KioskEndpointClient() {
        }
        
        public KioskEndpointClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KioskEndpointClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KioskEndpointClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KioskEndpointClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Nullable<bool> SaveScreeningResult(FrontDesk.ScreeningResult result) {
            return base.Channel.SaveScreeningResult(result);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> SaveScreeningResultAsync(FrontDesk.ScreeningResult result) {
            return base.Channel.SaveScreeningResultAsync(result);
        }
        
        public System.Nullable<bool> SaveScreeningResult_v2(FrontDesk.ScreeningResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog) {
            return base.Channel.SaveScreeningResult_v2(result, timeLog);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> SaveScreeningResult_v2Async(FrontDesk.ScreeningResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog) {
            return base.Channel.SaveScreeningResult_v2Async(result, timeLog);
        }
        
        public bool SaveDemographicsResults(FrontDesk.Common.Bhservice.Import.PatientDemographicsKioskResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog) {
            return base.Channel.SaveDemographicsResults(result, timeLog);
        }
        
        public System.Threading.Tasks.Task<bool> SaveDemographicsResultsAsync(FrontDesk.Common.Bhservice.Import.PatientDemographicsKioskResult result, FrontDesk.Common.Screening.ScreeningTimeLogRecord[] timeLog) {
            return base.Channel.SaveDemographicsResultsAsync(result, timeLog);
        }
        
        public bool Ping(short kioskID) {
            return base.Channel.Ping(kioskID);
        }
        
        public System.Threading.Tasks.Task<bool> PingAsync(short kioskID) {
            return base.Channel.PingAsync(kioskID);
        }
        
        public bool Ping_v2(FrontDesk.Server.Services.KioskPingMessage message) {
            return base.Channel.Ping_v2(message);
        }
        
        public System.Threading.Tasks.Task<bool> Ping_v2Async(FrontDesk.Server.Services.KioskPingMessage message) {
            return base.Channel.Ping_v2Async(message);
        }
        
        public bool Ping_v3(ScreenDox.Server.Common.Models.KioskPingMessage message) {
            return base.Channel.Ping_v3(message);
        }
        
        public System.Threading.Tasks.Task<bool> Ping_v3Async(ScreenDox.Server.Common.Models.KioskPingMessage message) {
            return base.Channel.Ping_v3Async(message);
        }
        
        public FrontDesk.Server.ScreeningSectionAgeView[] GetModifiedAgeSettings(System.DateTime lastModifiedDateUTC) {
            return base.Channel.GetModifiedAgeSettings(lastModifiedDateUTC);
        }
        
        public System.Threading.Tasks.Task<FrontDesk.Server.ScreeningSectionAgeView[]> GetModifiedAgeSettingsAsync(System.DateTime lastModifiedDateUTC) {
            return base.Channel.GetModifiedAgeSettingsAsync(lastModifiedDateUTC);
        }
        
        public FrontDesk.Server.ScreeningSectionAgeView[] GetModifiedAgeSettings_v2(short kioskId, System.DateTime lastModifiedDateUTC) {
            return base.Channel.GetModifiedAgeSettings_v2(kioskId, lastModifiedDateUTC);
        }
        
        public System.Threading.Tasks.Task<FrontDesk.Server.ScreeningSectionAgeView[]> GetModifiedAgeSettings_v2Async(short kioskId, System.DateTime lastModifiedDateUTC) {
            return base.Channel.GetModifiedAgeSettings_v2Async(kioskId, lastModifiedDateUTC);
        }
        
        public bool TestKioskInstallation(string kioskKey) {
            return base.Channel.TestKioskInstallation(kioskKey);
        }
        
        public System.Threading.Tasks.Task<bool> TestKioskInstallationAsync(string kioskKey) {
            return base.Channel.TestKioskInstallationAsync(kioskKey);
        }
        
        public System.Collections.Generic.Dictionary<string, int> GetPatientScreeningFrequencyStatistics(FrontDesk.ScreeningPatientIdentity patient) {
            return base.Channel.GetPatientScreeningFrequencyStatistics(patient);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetPatientScreeningFrequencyStatisticsAsync(FrontDesk.ScreeningPatientIdentity patient) {
            return base.Channel.GetPatientScreeningFrequencyStatisticsAsync(patient);
        }
        
        public System.Collections.Generic.Dictionary<string, int> GetPatientScreeningFrequencyStatistics_v2(FrontDesk.ScreeningPatientIdentity patient, short kioskID) {
            return base.Channel.GetPatientScreeningFrequencyStatistics_v2(patient, kioskID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetPatientScreeningFrequencyStatistics_v2Async(FrontDesk.ScreeningPatientIdentity patient, short kioskID) {
            return base.Channel.GetPatientScreeningFrequencyStatistics_v2Async(patient, kioskID);
        }
        
        public System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]> GetModifiedLookupValues(System.DateTime lastModifiedDateUTC, short kioskID) {
            return base.Channel.GetModifiedLookupValues(lastModifiedDateUTC, kioskID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]>> GetModifiedLookupValuesAsync(System.DateTime lastModifiedDateUTC, short kioskID) {
            return base.Channel.GetModifiedLookupValuesAsync(lastModifiedDateUTC, kioskID);
        }
        
        public System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]> GetLookupValuesDeleteLog(System.DateTime lastModifiedDateUTC, short kioskID) {
            return base.Channel.GetLookupValuesDeleteLog(lastModifiedDateUTC, kioskID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, FrontDesk.Common.LookupValue[]>> GetLookupValuesDeleteLogAsync(System.DateTime lastModifiedDateUTC, short kioskID) {
            return base.Channel.GetLookupValuesDeleteLogAsync(lastModifiedDateUTC, kioskID);
        }
        
        public RPMS.Common.Models.PatientSearch ValidatePatient(RPMS.Common.Models.PatientSearch patient) {
            return base.Channel.ValidatePatient(patient);
        }
        
        public System.Threading.Tasks.Task<RPMS.Common.Models.PatientSearch> ValidatePatientAsync(RPMS.Common.Models.PatientSearch patient) {
            return base.Channel.ValidatePatientAsync(patient);
        }
    }
}
