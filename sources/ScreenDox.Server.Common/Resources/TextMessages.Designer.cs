//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScreenDox.Server.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class TextMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal TextMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ScreenDox.Server.Common.Resources.TextMessages", typeof(TextMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You do not have access permissions for this page or record. Access is denied..
        /// </summary>
        public static string AccessPermissionsErrorMessage {
            get {
                return ResourceManager.GetString("AccessPermissionsErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have entered an invalid activation key. Please ensure that you have entered the activation key correctly..
        /// </summary>
        public static string Activation_InvalidKeyMessage {
            get {
                return ResourceManager.GetString("Activation_InvalidKeyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your product license is already activated. You cannot re-activate it..
        /// </summary>
        public static string Activation_LisenceIsAlreadyActivatedMessage {
            get {
                return ResourceManager.GetString("Activation_LisenceIsAlreadyActivatedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You product license was activated successfully..
        /// </summary>
        public static string Activation_SucceedMessage {
            get {
                return ResourceManager.GetString("Activation_SucceedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates.
        /// </summary>
        public static string BHS_REPORT_INDICATES {
            get {
                return ResourceManager.GetString("BHS_REPORT_INDICATES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to print Behavioral Patient Demographics for record {0}.
        /// </summary>
        public static string BhsDemographicsPrintingFailed {
            get {
                return ResourceManager.GetString("BhsDemographicsPrintingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to print Follow-Up Report for record {0}.
        /// </summary>
        public static string BhsFollowUpPrintingFailed {
            get {
                return ResourceManager.GetString("BhsFollowUpPrintingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to print Behavioral Health Screening Visit Report for record {0}.
        /// </summary>
        public static string BhsVisitPrintingFailed {
            get {
                return ResourceManager.GetString("BhsVisitPrintingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create Behavioral Health Screening Visit record {0}.
        /// </summary>
        public static string CheckInCreateBhsVisitFailed {
            get {
                return ResourceManager.GetString("CheckInCreateBhsVisitFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to delete Check-In due to internal error..
        /// </summary>
        public static string CheckInDeletionFailed {
            get {
                return ResourceManager.GetString("CheckInDeletionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Check-In has been received from Kiosk with errors. Please see the Error Log for detailed information which data is missing. Error entry requires closed date and time on the Check-In record creation date..
        /// </summary>
        public static string CheckInHasValidationErrors {
            get {
                return ResourceManager.GetString("CheckInHasValidationErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to print Behavioral Health Screening Report for record {0}.
        /// </summary>
        public static string CheckInPrintingFailed {
            get {
                return ResourceManager.GetString("CheckInPrintingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to update EHR database with ScreenDox screening results. Procceed?.
        /// </summary>
        public static string ConfirmBeginExport {
            get {
                return ResourceManager.GetString("ConfirmBeginExport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are about to delete Check-In Record. Proceed?.
        /// </summary>
        public static string DeleteCheckInConfirmMessage {
            get {
                return ResourceManager.GetString("DeleteCheckInConfirmMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; All &gt;&gt;.
        /// </summary>
        public static string DropDown_AllText {
            get {
                return ResourceManager.GetString("DropDown_AllText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; Any &gt;&gt;.
        /// </summary>
        public static string DropDown_NotSelectedFilter {
            get {
                return ResourceManager.GetString("DropDown_NotSelectedFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; Not selected &gt;&gt;.
        /// </summary>
        public static string DropDown_NotSelectedText {
            get {
                return ResourceManager.GetString("DropDown_NotSelectedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;&lt; Not selected &gt;&gt;.
        /// </summary>
        public static string DropDown_NotSelectedText1 {
            get {
                return ResourceManager.GetString("DropDown_NotSelectedText1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patient&apos;s record has been changed. Click Save button to apply changes and update EHR search result. Reset button reverts changes..
        /// </summary>
        public static string EditPatient_DataChanged {
            get {
                return ResourceManager.GetString("EditPatient_DataChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to edit patient contact information. Patient can not be found.
        /// </summary>
        public static string EditPatientContact_Error {
            get {
                return ResourceManager.GetString("EditPatientContact_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BHS Report export has failed,.
        /// </summary>
        public static string ExportFailed {
            get {
                return ResourceManager.GetString("ExportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of exported entries should not exceed {0}. Please use the filter to reduce number of results..
        /// </summary>
        public static string ExportLimitMsg {
            get {
                return ResourceManager.GetString("ExportLimitMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select screening result before export..
        /// </summary>
        public static string ExportWiz_ScreeningResultNotSelected {
            get {
                return ResourceManager.GetString("ExportWiz_ScreeningResultNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export operation has completed successfully..
        /// </summary>
        public static string ExportWizard_ExportCompletedSuccessfully {
            get {
                return ResourceManager.GetString("ExportWizard_ExportCompletedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export operation has completed with errors..
        /// </summary>
        public static string ExportWizard_ExportCompletedWithErrors {
            get {
                return ResourceManager.GetString("ExportWizard_ExportCompletedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export operation has failed..
        /// </summary>
        public static string ExportWizard_ExportFailed {
            get {
                return ResourceManager.GetString("ExportWizard_ExportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select matched patient from the list to proceed..
        /// </summary>
        public static string ExportWizard_PleaseSelectPatient {
            get {
                return ResourceManager.GetString("ExportWizard_PleaseSelectPatient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select visit from the list to proceed..
        /// </summary>
        public static string ExportWizard_PleaseSelectVisit {
            get {
                return ResourceManager.GetString("ExportWizard_PleaseSelectVisit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected BHS Report has been already exported..
        /// </summary>
        public static string ExportWizard_ReportHasBeenExportedAlready {
            get {
                return ResourceManager.GetString("ExportWizard_ReportHasBeenExportedAlready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BHS Report has been exported to EHR but failed update export details in the FD database..
        /// </summary>
        public static string FailedToUpdateFDExportDetails {
            get {
                return ResourceManager.GetString("FailedToUpdateFDExportDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annually.
        /// </summary>
        public static string Frequency_Annually {
            get {
                return ResourceManager.GetString("Frequency_Annually", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bi-Monthly.
        /// </summary>
        public static string Frequency_BiMonthly {
            get {
                return ResourceManager.GetString("Frequency_BiMonthly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Daily.
        /// </summary>
        public static string Frequency_Daily {
            get {
                return ResourceManager.GetString("Frequency_Daily", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Every visit.
        /// </summary>
        public static string Frequency_EveryVisit {
            get {
                return ResourceManager.GetString("Frequency_EveryVisit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly.
        /// </summary>
        public static string Frequency_Monthly {
            get {
                return ResourceManager.GetString("Frequency_Monthly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One time only.
        /// </summary>
        public static string Frequency_Once {
            get {
                return ResourceManager.GetString("Frequency_Once", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quarterly.
        /// </summary>
        public static string Frequency_Quarterly {
            get {
                return ResourceManager.GetString("Frequency_Quarterly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Weekly.
        /// </summary>
        public static string Frequency_Weekly {
            get {
                return ResourceManager.GetString("Frequency_Weekly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of patient records:.
        /// </summary>
        public static string IndicatorReport_Total {
            get {
                return ResourceManager.GetString("IndicatorReport_Total", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected a disabled Branch Location. You are not allowed to add new kiosk to a disabled Branch Location.
        /// </summary>
        public static string Kiosk_CannotAddKioskToBlockedLocation {
            get {
                return ResourceManager.GetString("Kiosk_CannotAddKioskToBlockedLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to enable kiosk. Maximum kiosk count has been exceeded.
        /// </summary>
        public static string Kiosk_Disabled_Failed {
            get {
                return ResourceManager.GetString("Kiosk_Disabled_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete Kiosk because there are patient reports associated with it..
        /// </summary>
        public static string Kiosk_UnableToDelete {
            get {
                return ResourceManager.GetString("Kiosk_UnableToDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot enable kiosk. The assigned location is disabled..
        /// </summary>
        public static string Kiosk_UnableToEnableBecauseLocationIsDisabled {
            get {
                return ResourceManager.GetString("Kiosk_UnableToEnableBecauseLocationIsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Kiosk name is already in use. Please enter a different kiosk name.
        /// </summary>
        public static string KioskAlreadyUsed {
            get {
                return ResourceManager.GetString("KioskAlreadyUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have exceeded the maximum allowed number of Kiosks according to the terms of your license agreement. Please acquire additional licenses or disable Kiosks..
        /// </summary>
        public static string KioskCountExceeded {
            get {
                return ResourceManager.GetString("KioskCountExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Use this value during ScreenDox Kiosk application installation).
        /// </summary>
        public static string KioskKeyLabelNotes {
            get {
                return ResourceManager.GetString("KioskKeyLabelNotes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please note, application license will expire in &lt;b&gt;{0}&lt;/b&gt; days..
        /// </summary>
        public static string LicenseExpirationText {
            get {
                return ResourceManager.GetString("LicenseExpirationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create activation request key. Invalid license key or application internal error..
        /// </summary>
        public static string LicenseKey_CreateActivationREquestKeyFailedMessage {
            get {
                return ResourceManager.GetString("LicenseKey_CreateActivationREquestKeyFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have already used this license key. Please use another license key..
        /// </summary>
        public static string LicenseKey_DuplicateKeyMessage {
            get {
                return ResourceManager.GetString("LicenseKey_DuplicateKeyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have entered invalid license key..
        /// </summary>
        public static string LicenseKey_InvalidKeyMessage {
            get {
                return ResourceManager.GetString("LicenseKey_InvalidKeyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have more than one activated license, only the license shown on top of the list can be used. Other licenses, even if they are not expired, will be ignored..
        /// </summary>
        public static string LicenseKey_MoreThanOneLisenceRuleInfo {
            get {
                return ResourceManager.GetString("LicenseKey_MoreThanOneLisenceRuleInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your license key has been accepted. Now you need to activate it to start using the application..
        /// </summary>
        public static string LicenseKey_SucceedMessage {
            get {
                return ResourceManager.GetString("LicenseKey_SucceedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to disable branch location. Branch location has one or more active kiosks.
        /// </summary>
        public static string Location_Disabled_Failed {
            get {
                return ResourceManager.GetString("Location_Disabled_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to login. You have entered invalid username or password or your account has been blocked..
        /// </summary>
        public static string LoginFailedMessage {
            get {
                return ResourceManager.GetString("LoginFailedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New password has already been used. Please enter another..
        /// </summary>
        public static string Membership_DuplicatePassword {
            get {
                return ResourceManager.GetString("Membership_DuplicatePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to change password. You have entered invalid password value..
        /// </summary>
        public static string Membership_InvalidCurrentPwd {
            get {
                return ResourceManager.GetString("Membership_InvalidCurrentPwd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to “ScreenDox” application needs to be activated before first use. You need to login with Superuser credentials to activate this product..
        /// </summary>
        public static string NeedToBeSuperuserToActivateProductErrorMessage {
            get {
                return ResourceManager.GetString("NeedToBeSuperuserToActivateProductErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no matches in the EHR system.
        /// </summary>
        public static string NoMatchesForPatient {
            get {
                return ResourceManager.GetString("NoMatchesForPatient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no scheduled visits for selected patient record in the EHR system.
        /// </summary>
        public static string NoVisitsForPatient {
            get {
                return ResourceManager.GetString("NoVisitsForPatient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScreenDox Record.
        /// </summary>
        public static string PatientInfoEdit_FDTitle {
            get {
                return ResourceManager.GetString("PatientInfoEdit_FDTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EHR Record.
        /// </summary>
        public static string PatientInfoEdit_RpmsTitle {
            get {
                return ResourceManager.GetString("PatientInfoEdit_RpmsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Renewal period can not be less than 1 day.
        /// </summary>
        public static string RenewalPeriodCompareError {
            get {
                return ResourceManager.GetString("RenewalPeriodCompareError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brief Screening Questions.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_BRIEF {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_BRIEF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (%) Negative.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_PERCENT_NEGATIVE {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_PERCENT_NEGATIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (%) Positive.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_PERCENT_POSITIVE {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_PERCENT_POSITIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_TOTAL {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_TOTAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Negative.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_TOTAL_NEGATIVE {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_TOTAL_NEGATIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Positive.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_TOTAL_POSITIVE {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_TOTAL_POSITIVE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Reported.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_TOTAL_REPORTED {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_TOTAL_REPORTED", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Unique Patients.
        /// </summary>
        public static string REPORT_INDICATOR_HEADER_TOTAL_UNIQUE {
            get {
                return ResourceManager.GetString("REPORT_INDICATOR_HEADER_TOTAL_UNIQUE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ScreenDox Screener does not have connection to the EHR. See error log for details..
        /// </summary>
        public static string RPMS_NotConnectedMessage {
            get {
                return ResourceManager.GetString("RPMS_NotConnectedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have more than one credential, only the credential shown on top of the list is used. Other credentials, even if they are not expired, are ignored..
        /// </summary>
        public static string RpmsCredentials_MoreThanOneMessage {
            get {
                return ResourceManager.GetString("RpmsCredentials_MoreThanOneMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot search for patients. There is no connection to the EHR database..
        /// </summary>
        public static string RpmsPatientsAccessErrorMessage {
            get {
                return ResourceManager.GetString("RpmsPatientsAccessErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set how frequent each screening is conducted for the GPRA period.
        ///&lt;br /&gt;
        ///ScreenDox always screens patient on the first visit of each GPRA period..
        /// </summary>
        public static string ScreeningFrequency_Notes {
            get {
                return ResourceManager.GetString("ScreeningFrequency_Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Minimum Age&apos; field is required. Please enter &quot;0&quot; (zero) value if screening measure should be presented for all patients regardless of their age..
        /// </summary>
        public static string ScreeningMinimalAgeForm_EmptyValueError {
            get {
                return ResourceManager.GetString("ScreeningMinimalAgeForm_EmptyValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A patient whose age is less than the minimum age for the screening measure will automatically not be presented questions for the measure. &lt;br&gt;Use “0” (zero) value to present the screening measure for all patients..
        /// </summary>
        public static string ScreeningMinimalAgeForm_Notes {
            get {
                return ResourceManager.GetString("ScreeningMinimalAgeForm_Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Minimum Age&apos; field accepts values from 0 to 200.
        /// </summary>
        public static string ScreeningMinimalAgeForm_RangeError {
            get {
                return ResourceManager.GetString("ScreeningMinimalAgeForm_RangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete user. Security log contains records of user access to patient information..
        /// </summary>
        public static string SecurityLog_UserDeleteError {
            get {
                return ResourceManager.GetString("SecurityLog_UserDeleteError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal error occurred while saving security event enabled state. Some of the security settings could not be saved..
        /// </summary>
        public static string SecurityStateSavedWithErrors {
            get {
                return ResourceManager.GetString("SecurityStateSavedWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Cut Score&apos;  field accepts values from 1 to 30. Default value is &apos;1&apos;..
        /// </summary>
        public static string VisitSettingsCutScore_RangeError {
            get {
                return ResourceManager.GetString("VisitSettingsCutScore_RangeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;Cut Score&apos; field is required. Please enter &quot;1&quot; (one) value if all severity levels
        ///should be included on the Visit List..
        /// </summary>
        public static string VisitSettingsCutStore_EmptyValueError {
            get {
                return ResourceManager.GetString("VisitSettingsCutStore_EmptyValueError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Measure Tools in the &quot;On&quot; position will create a Visit when a patient screens positive for these problems..
        /// </summary>
        public static string VisitSettingsForm_Notes {
            get {
                return ResourceManager.GetString("VisitSettingsForm_Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using an unsupported browser:  Internet Explorer 6.&lt;br/&gt;Please upgrade your browser to Internet Explorer 8 or  Mozilla Firefox 3.5.
        /// </summary>
        public static string Warning_UpgradeBrowser {
            get {
                return ResourceManager.GetString("Warning_UpgradeBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write my own question.
        /// </summary>
        public static string WriteMyOwnSecurityQuestion {
            get {
                return ResourceManager.GetString("WriteMyOwnSecurityQuestion", resourceCulture);
            }
        }
    }
}
