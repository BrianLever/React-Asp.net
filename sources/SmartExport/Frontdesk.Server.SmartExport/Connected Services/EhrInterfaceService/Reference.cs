//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Frontdesk.Server.SmartExport.EhrInterfaceService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EhrInterfaceService.IEhrInterface")]
    internal interface IEhrInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetMatchedPatients", ReplyAction="http://tempuri.org/IEhrInterface/GetMatchedPatientsResponse")]
        System.Collections.Generic.List<RPMS.Common.Models.Patient> GetMatchedPatients(RPMS.Common.Models.Patient searchPattern, int currentPageIndex, int maxRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetMatchedPatients", ReplyAction="http://tempuri.org/IEhrInterface/GetMatchedPatientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.Patient>> GetMatchedPatientsAsync(RPMS.Common.Models.Patient searchPattern, int currentPageIndex, int maxRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetPatientCount", ReplyAction="http://tempuri.org/IEhrInterface/GetPatientCountResponse")]
        int GetPatientCount(RPMS.Common.Models.Patient searchPattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetPatientCount", ReplyAction="http://tempuri.org/IEhrInterface/GetPatientCountResponse")]
        System.Threading.Tasks.Task<int> GetPatientCountAsync(RPMS.Common.Models.Patient searchPattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetPatientRecord", ReplyAction="http://tempuri.org/IEhrInterface/GetPatientRecordResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        RPMS.Common.Models.Patient GetPatientRecord(RPMS.Common.Models.PatientSearch searchPattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetPatientRecord", ReplyAction="http://tempuri.org/IEhrInterface/GetPatientRecordResponse")]
        System.Threading.Tasks.Task<RPMS.Common.Models.Patient> GetPatientRecordAsync(RPMS.Common.Models.PatientSearch searchPattern);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatient", ReplyAction="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatientResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        System.Collections.Generic.List<RPMS.Common.Models.Visit> GetScheduledVisitsByPatient(RPMS.Common.Models.PatientSearch patientRecord, int currentPageIndex, int maxRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatient", ReplyAction="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatientResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.Visit>> GetScheduledVisitsByPatientAsync(RPMS.Common.Models.PatientSearch patientRecord, int currentPageIndex, int maxRows);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatientCount", ReplyAction="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatientCountResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        int GetScheduledVisitsByPatientCount(RPMS.Common.Models.PatientSearch patientRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatientCount", ReplyAction="http://tempuri.org/IEhrInterface/GetScheduledVisitsByPatientCountResponse")]
        System.Threading.Tasks.Task<int> GetScheduledVisitsByPatientCountAsync(RPMS.Common.Models.PatientSearch patientRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetVisitRecord", ReplyAction="http://tempuri.org/IEhrInterface/GetVisitRecordResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        RPMS.Common.Models.Visit GetVisitRecord(int visitID, RPMS.Common.Models.PatientSearch patientRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetVisitRecord", ReplyAction="http://tempuri.org/IEhrInterface/GetVisitRecordResponse")]
        System.Threading.Tasks.Task<RPMS.Common.Models.Visit> GetVisitRecordAsync(int visitID, RPMS.Common.Models.PatientSearch patientRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/PreviewExportResult", ReplyAction="http://tempuri.org/IEhrInterface/PreviewExportResultResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        RPMS.Common.Models.ExportTask PreviewExportResult(FrontDesk.ScreeningResult screeningResult, RPMS.Common.Models.PatientSearch selectedPatient, int selectedVisitRowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/PreviewExportResult", ReplyAction="http://tempuri.org/IEhrInterface/PreviewExportResultResponse")]
        System.Threading.Tasks.Task<RPMS.Common.Models.ExportTask> PreviewExportResultAsync(FrontDesk.ScreeningResult screeningResult, RPMS.Common.Models.PatientSearch selectedPatient, int selectedVisitRowId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/CommitExportTask", ReplyAction="http://tempuri.org/IEhrInterface/CommitExportTaskResponse")]
        System.Collections.Generic.List<RPMS.Common.Models.ExportResult> CommitExportTask(int patientID, int visitID, RPMS.Common.Models.ExportTask exportTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/CommitExportTask", ReplyAction="http://tempuri.org/IEhrInterface/CommitExportTaskResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.ExportResult>> CommitExportTaskAsync(int patientID, int visitID, RPMS.Common.Models.ExportTask exportTask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/ExportScreeningData", ReplyAction="http://tempuri.org/IEhrInterface/ExportScreeningDataResponse")]
        System.Collections.Generic.List<RPMS.Common.Models.ExportResult> ExportScreeningData(RPMS.Common.Models.ScreeningResultRecord screeningResultRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/ExportScreeningData", ReplyAction="http://tempuri.org/IEhrInterface/ExportScreeningDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.ExportResult>> ExportScreeningDataAsync(RPMS.Common.Models.ScreeningResultRecord screeningResultRecord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/ValidatePatientRecord", ReplyAction="http://tempuri.org/IEhrInterface/ValidatePatientRecordResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(RPMS.Common.Models.Patient))]
        RPMS.Common.Models.PatientValidation.PatientValidationResult ValidatePatientRecord(RPMS.Common.Models.PatientSearch patientSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/ValidatePatientRecord", ReplyAction="http://tempuri.org/IEhrInterface/ValidatePatientRecordResponse")]
        System.Threading.Tasks.Task<RPMS.Common.Models.PatientValidation.PatientValidationResult> ValidatePatientRecordAsync(RPMS.Common.Models.PatientSearch patientSearch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetMeta", ReplyAction="http://tempuri.org/IEhrInterface/GetMetaResponse")]
        RPMS.Common.Models.ExportMetaInfo GetMeta();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEhrInterface/GetMeta", ReplyAction="http://tempuri.org/IEhrInterface/GetMetaResponse")]
        System.Threading.Tasks.Task<RPMS.Common.Models.ExportMetaInfo> GetMetaAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface IEhrInterfaceChannel : Frontdesk.Server.SmartExport.EhrInterfaceService.IEhrInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class EhrInterfaceClient : System.ServiceModel.ClientBase<Frontdesk.Server.SmartExport.EhrInterfaceService.IEhrInterface>, Frontdesk.Server.SmartExport.EhrInterfaceService.IEhrInterface {
        
        public EhrInterfaceClient() {
        }
        
        public EhrInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EhrInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EhrInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EhrInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<RPMS.Common.Models.Patient> GetMatchedPatients(RPMS.Common.Models.Patient searchPattern, int currentPageIndex, int maxRows) {
            return base.Channel.GetMatchedPatients(searchPattern, currentPageIndex, maxRows);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.Patient>> GetMatchedPatientsAsync(RPMS.Common.Models.Patient searchPattern, int currentPageIndex, int maxRows) {
            return base.Channel.GetMatchedPatientsAsync(searchPattern, currentPageIndex, maxRows);
        }
        
        public int GetPatientCount(RPMS.Common.Models.Patient searchPattern) {
            return base.Channel.GetPatientCount(searchPattern);
        }
        
        public System.Threading.Tasks.Task<int> GetPatientCountAsync(RPMS.Common.Models.Patient searchPattern) {
            return base.Channel.GetPatientCountAsync(searchPattern);
        }
        
        public RPMS.Common.Models.Patient GetPatientRecord(RPMS.Common.Models.PatientSearch searchPattern) {
            return base.Channel.GetPatientRecord(searchPattern);
        }
        
        public System.Threading.Tasks.Task<RPMS.Common.Models.Patient> GetPatientRecordAsync(RPMS.Common.Models.PatientSearch searchPattern) {
            return base.Channel.GetPatientRecordAsync(searchPattern);
        }
        
        public System.Collections.Generic.List<RPMS.Common.Models.Visit> GetScheduledVisitsByPatient(RPMS.Common.Models.PatientSearch patientRecord, int currentPageIndex, int maxRows) {
            return base.Channel.GetScheduledVisitsByPatient(patientRecord, currentPageIndex, maxRows);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.Visit>> GetScheduledVisitsByPatientAsync(RPMS.Common.Models.PatientSearch patientRecord, int currentPageIndex, int maxRows) {
            return base.Channel.GetScheduledVisitsByPatientAsync(patientRecord, currentPageIndex, maxRows);
        }
        
        public int GetScheduledVisitsByPatientCount(RPMS.Common.Models.PatientSearch patientRecord) {
            return base.Channel.GetScheduledVisitsByPatientCount(patientRecord);
        }
        
        public System.Threading.Tasks.Task<int> GetScheduledVisitsByPatientCountAsync(RPMS.Common.Models.PatientSearch patientRecord) {
            return base.Channel.GetScheduledVisitsByPatientCountAsync(patientRecord);
        }
        
        public RPMS.Common.Models.Visit GetVisitRecord(int visitID, RPMS.Common.Models.PatientSearch patientRecord) {
            return base.Channel.GetVisitRecord(visitID, patientRecord);
        }
        
        public System.Threading.Tasks.Task<RPMS.Common.Models.Visit> GetVisitRecordAsync(int visitID, RPMS.Common.Models.PatientSearch patientRecord) {
            return base.Channel.GetVisitRecordAsync(visitID, patientRecord);
        }
        
        public RPMS.Common.Models.ExportTask PreviewExportResult(FrontDesk.ScreeningResult screeningResult, RPMS.Common.Models.PatientSearch selectedPatient, int selectedVisitRowId) {
            return base.Channel.PreviewExportResult(screeningResult, selectedPatient, selectedVisitRowId);
        }
        
        public System.Threading.Tasks.Task<RPMS.Common.Models.ExportTask> PreviewExportResultAsync(FrontDesk.ScreeningResult screeningResult, RPMS.Common.Models.PatientSearch selectedPatient, int selectedVisitRowId) {
            return base.Channel.PreviewExportResultAsync(screeningResult, selectedPatient, selectedVisitRowId);
        }
        
        public System.Collections.Generic.List<RPMS.Common.Models.ExportResult> CommitExportTask(int patientID, int visitID, RPMS.Common.Models.ExportTask exportTask) {
            return base.Channel.CommitExportTask(patientID, visitID, exportTask);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.ExportResult>> CommitExportTaskAsync(int patientID, int visitID, RPMS.Common.Models.ExportTask exportTask) {
            return base.Channel.CommitExportTaskAsync(patientID, visitID, exportTask);
        }
        
        public System.Collections.Generic.List<RPMS.Common.Models.ExportResult> ExportScreeningData(RPMS.Common.Models.ScreeningResultRecord screeningResultRecord) {
            return base.Channel.ExportScreeningData(screeningResultRecord);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RPMS.Common.Models.ExportResult>> ExportScreeningDataAsync(RPMS.Common.Models.ScreeningResultRecord screeningResultRecord) {
            return base.Channel.ExportScreeningDataAsync(screeningResultRecord);
        }
        
        public RPMS.Common.Models.PatientValidation.PatientValidationResult ValidatePatientRecord(RPMS.Common.Models.PatientSearch patientSearch) {
            return base.Channel.ValidatePatientRecord(patientSearch);
        }
        
        public System.Threading.Tasks.Task<RPMS.Common.Models.PatientValidation.PatientValidationResult> ValidatePatientRecordAsync(RPMS.Common.Models.PatientSearch patientSearch) {
            return base.Channel.ValidatePatientRecordAsync(patientSearch);
        }
        
        public RPMS.Common.Models.ExportMetaInfo GetMeta() {
            return base.Channel.GetMeta();
        }
        
        public System.Threading.Tasks.Task<RPMS.Common.Models.ExportMetaInfo> GetMetaAsync() {
            return base.Channel.GetMetaAsync();
        }
    }
}
